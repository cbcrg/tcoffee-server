###AIM:
PIPER is a pipeline for the detection and mapping of long non-coding RNAs (lncRNAs). It considers 3 main independent blocks:
1) pre-processing:  This part is needed to uniform the input file format and to apply filters for lncRNA hunting.
                    In either of these situations the PIPER pre-proprecissing step is needed:
                        - Input of transcripts of unkown coding potential (i.e. newly assembled transcripts from an RNAseq experiment)
                        - Input of transcripts in exon.gtf format 
2) mapping:         This part considers the screening of a input set of lncRNAs against the defined set of target genomes.  
		    If the user already has a set of lncRNAs and these transcripts are in a standard FASTA format the mapping can be readily executed.
3) quality check:   This part is meant to provide analysis to assess the quality of the mapping.
		    The qualityCheck analysis is not automatically executed as it depends very much on the availability of extra data source (i.e. read data, chromatine marks..)

###STRUCTURE:
The pipeline is structured in this way:
- An "allGenomeInfo" folder containing all the target genome assemblies considered in the analysis. 
- A "script" folder, containing all the script used by PIPER in the pre-processing a and mapping steps.
- A "qualityCheck" folder containing all the tools to assess the quality of the mapping.
- An "experiment" foder containing as sub directories all the individual mapping experiments. 
- startPipeline.pl and executePipeline.pl scripts, to repectively initialize and run the pipeline


###EXPLANATION:
The user has to use just two scripts: the startPipeline.pl and the executePipeline.pl.
The first is needed to initiate a new PIPER mapping experiment, defining all the input files and all the parameters caracterizing such experiment.
The output of the startPipeline.pl is an "experiment/newExperiment" folder. All the ouptputs of PIPER will be stored there.
The experiment folder has this content:
	-BLAST_OUT
		contains the blast output for each target genome.
	-CLUSTER_FILES
		in the case PIPER run on the cluster, this folder will contain all the cluster related files (STDOUT, STDERR, splits..).
	-CONFIG
		contains the configuration files for some of the software run by PIPER.
	-EXONERATE_OUT
		contains the exonerate output for each blast output.
	-RNAmapping_pipeline.txt
		PIPER pipeline to be executed for the experiment. Contains all considered parameters and command lines.
	-STDERR
		contains the standard error of some of the software run by PIPER.
	-fasta_aln
		contains the multiple sequence alignments (MSAs) of detected homologs in fasta_aln format . 
	-multifasta4EachTx
		contains multifasta files of detected homologs for each query.
	-outAlignments	
		contains the multiple sequence alignments of detected homologs in CLUSTAL_W format.
	-outSim	
		contains files giving informations on the level of similarity among query and detected homologs.
	-pre_processing			
		in the case PIPER run the pre-processing step, all the pre-processing out files will be stored here.


executePipeline.pl is needed to execute the pipeline up to a user defined step.
The PIPER steps are:
	pre_processing
		to get queries in FASTA format if the input was exon.gtf and to apply coding potential filtering to an unknown set of transcripts. This will fill up the pre_processing folder.		
	database
		to format the target genomes. This step will fill up the allGenomeInfo folder.
		--CAVEAT-- All the experiments in this PIPER installation will have the same set genome targets. If the user needs to run on another set of genomes another PIPER installation is needed.
	blast
		to blast the query lncRNAs against the set of target genomes. This will fill up the BLAST_OUT folder.
	exonerate
		to exonerate the blast outputs. This will fill up the BLAST_OUT folder.
	prepare_mfa
		to generate multifasta files of detected homologs for each query. This will fill up the multifasta4EachTx folder.
	alignment
		to generate with t_coffee multiple sequence alignments of detected homologs. This will fill up the outAlignments folder.
	similarity
		to generate files giving informations on the level of similarity among query and detected homologs. This will fill up the outSim folder and generate the simMatrix.csv file.
	csf
		to run PhyloCSF to estimate the codon substitution frequency (CSF). This will fill up the fasta_aln folder and generate the csfOut.txt file.

See below for information on all the available parameters.



###START PIPER:
In order to start a new mapping experiment it is needed to run startPipeline.pl.
startPipeline.pl takes as input a "genomes" file listing the target multiFASTA genomes.
The file must have this syntax:    
input_genomes_file(absolute path)   name
Example:  
/users/gb/genomes/mm9.fa   mouse
/users/gb/genomes/hg19.fa  human
By default (-pre_processing off) it takes a multi-FASTA file (-query) and screen the specified.
The user can pre_process the input queries (-pre_processing on) by entering either a fasta file (-query) either a gtf file (-query_gtf) together with the genome corresponding to the queries (-reference_genome)
By doing this the user can hunt new ncRNA sequences by applying different filters (none by default)

#SYNOPSYS:
./startPipeline.pl -genomes fileName [-query|-query_gtf] [options]

--ALL PARAMETERS--:
-------------------------------------
-general parameters:
   * -query                                                                          <Default: none>
   * -experiment                                                                     <Default: exp_XXX>
   * -cluster [on|off]                                                               <Default: off>
   * -cpus                                                                           <Default: 1>
-------------------------------------
-pre_processing parameters:
   * -pre_processing                                                                 <Default: off>
   * -query_gtf                                                                      <Default: none>
   * -reference_genome                                                               <Default: none>
   * -link2referenceGenome                                                           <Default: off>
-filtering parameters:	
   * -unstrandedGTF                                                                  <Default: off>
   * -geneid_parameter                                                               <Default: none>
   * -rfam                                                                           <Default: none>
   * -annotation                                                                     <Default: none>
   * -overlapDistance                                                                <Default: 0>
   * -overlapStrand                                                                  <Default: yes>
   * -nr                                                                             <Default: none>
   * -uniprot                                                                        <Default: none>
   * -querySplits4cluster4filtering                                                  <Default: 10>
   * -pfam                                                                           <Default: none>
   * -codingPotential_check [on|off]                                                 <Default: off>
   * -blastx                                                                         <Default: blastx>
   * -rpsblast                                                                       <Default: rpsblast>
   * -geneid                                                                         <Default: geneid>
   * -orf_score_threshold                                                            <Default: 20>
-------------------------------------
-database parameters:
   * -splitGenome                                                                    <Default: no>
   * -xdformat                                                                       <Default: xdformat>
-mapping parameters:
   * -tcoffee                                                                        <Default: tcoffee>
   * -exonerate_lines_mode [integer|exhaustive]                                      <Default: 1000>
   * -exonerate_success_mode [integer|exhaustive|ortholog]                           <Default: 1>
   * -chr_subseq                                                                     <Default: chr_subseq>
   * -blast                                                                          <Default: wu-blastn>
   * -exonerate                                                                      <Default: exonerate>
   * -splitExonerate                                                                 <Default: no>
   * -ner                                                                            <Default: no>
   * -blast_strategy [wublastn|abblastn|wublastr|abblastr|wublastn_opt|abblastn_opt] <Default: wublastn_opt>
-CSF parameters:
   * -phyloCSFparameters                                                             <Default: 29mammals>
   * -phyloCSF                                                                       <Default: PhyloCSF>
   * -phyloCSFreference                                                              <Default: human>

---------------------------------------------
-query:                Input RNA multiFASTA file
-experimet:            Give a name to the experiment
-cluster:              Choose to use, if available, a SGE cluster. This would allow to use more CPUs and make PIPER faster.
		       If set to "on" PIPER will run a blast for each species as separate jobs on the cluster. The same for exonerate.
                       The cluster can also be used to enhance the speed of the two pre_processing step: creating query_gtf annotations out of the fasta query, and running all blast based filtering steps (i.e. blastx..)
-cpus:                 Number of CPUs used by the various Blast, either locally, either on the nodes of the cluster. If running on the cluster it is recommendable leaving the default (i.e. 1)

-pre_processing:       Activate the pre_processing block: get the query sequences and running filtering routines.
-query_gtf:            exon.gtf (or gff) file correspongind to the query annotations. Can be used both to extract the query sequences and to refine the exonerate mapping.
-reference_genome:     Parameter just used in combination with -query_gtf if -query is not provided. Indicate the genome file (multifasta) to whom the -query_gtf refers. This genome will be used to extract the query sequences.
-link2referenceGenome: If the query gtf annotation are not provided it is good to get them to improve the exonerate mapping

TROUBLESHOOTING
   * Read the manual for a detailed description of the OPTIONS
   * Both AB-Blast and WU-Blast packages are provided with their own xdformat. If needed it is therefore important that the user properly specifies, with -xdformat option, the proper one.












###EXECUTE PIPER:









